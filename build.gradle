plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
    id 'maven'
    id 'com.github.johnrengelman.shadow' version '4.0.2'
    id 'java-library'
    id 'com.bmuschko.nexus' version '2.3.1'
    id "org.jlleitschuh.gradle.ktlint" version "9.2.1"
    id "jacoco"
    id 'org.jetbrains.dokka' version '0.10.1'
}

group = 'com.pubnub'
version = '4.0.0'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    implementation("com.squareup.retrofit2:retrofit:2.6.2")

    api group: 'com.squareup.okhttp3', name: 'logging-interceptor', version: '3.12.6'

    api 'com.google.code.gson:gson:2.8.6'
    implementation group: 'com.squareup.retrofit2', name: 'converter-gson', version: '2.6.2'

    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.28'

    testImplementation 'org.awaitility:awaitility-kotlin:4.0.1'
    testImplementation 'com.github.tomakehurst:wiremock:2.26.3'

    implementation group: 'org.json', name: 'json', version: '20190722'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.6.2'

    testImplementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    testImplementation group: 'ch.qos.logback', name: 'logback-core', version: '1.2.3'
}

shadowJar {
    classifier = "all"
}

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/dokka"
}

ktlint {
    verbose = true
    additionalEditorconfigFile.set(file("check/.editorconfig"))
}

tasks.withType(Test) {
    useJUnitPlatform {
        includeEngines 'junit-jupiter'
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

extraArchive {
    sources = true
    tests = true
    javadoc = true
}

nexus {
    sign = true
    repositoryUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
    snapshotRepositoryUrl = 'https://oss.sonatype.org/content/repositories/snapshots'
}

modifyPom {
    project {
        name 'PubNub Kotlin SDK'
        description 'PubNub is a cross-platform client-to-client (1:1 and 1:many) push service in the cloud, capable of\n' +
                '        broadcasting real-time messages to millions of web and mobile clients simultaneously, in less than a quarter\n' +
                '        second!'
        url 'https://github.com/pubnub/kotlin'
        inceptionYear '2009'

        scm {
            url 'https://github.com/pubnub/kotlin'
        }

        licenses {
            license {
                name 'MIT License'
                url 'https://github.com/pubnub/pubnub-api/blob/master/LICENSE'
                distribution 'repo'
            }
        }

        developers {
            developer {
                id 'PubNub'
                name 'PubNub'
                email 'support@pubnub.com'
            }
        }
    }
}

build.finalizedBy(dokka, shadowJar)
